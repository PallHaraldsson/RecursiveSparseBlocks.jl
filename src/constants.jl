
# Flags
const RSB_FLAG_NOFLAGS                                 = 0x000000
const RSB_FLAG_IDENTICAL_FLAGS                         = RSB_FLAG_NOFLAGS
const RSB_FLAG_FORTRAN_INDICES_INTERFACE               = 0x000001
const RSB_FLAG_C_INDICES_INTERFACE                     = 0x000000
const RSB_FLAG_USE_HALFWORD_INDICES                    = 0x000002
const RSB_FLAG_WANT_ROW_MAJOR_ORDER                    = 0x000000
const RSB_FLAG_WANT_COLUMN_MAJOR_ORDER                 = 0x4000000
const RSB_FLAG_SORTED_INPUT                            = 0x000004
const RSB_FLAG_TRIANGULAR                              = 0x000008
const RSB_FLAG_LOWER                                   = 0x000010
const RSB_FLAG_UPPER                                   = 0x000020
const RSB_FLAG_UNIT_DIAG_IMPLICIT                      = 0x000040
const RSB_FLAG_WANT_COO_STORAGE                        = 0x000100
const RSB_FLAG_DUPLICATES_KEEP_LAST                    = 0x000000
const RSB_FLAG_DUPLICATES_DEFAULT_HANDLE               = 0x000000
const RSB_FLAG_DUPLICATES_SUM                          = 0x000200
const RSB_FLAG_DISCARD_ZEROS                           = 0x000400
const RSB_FLAG_QUAD_PARTITIONING                       = 0x002000
const RSB_FLAG_WANT_BCSS_STORAGE                       = 0x004000
const RSB_FLAG_ASSEMBLED_IN_COO_ARRAYS                 = 0x040000
const RSB_FLAG_EXPERIMENTAL_IN_PLACE_PERMUTATION_SORT  = 0x080000
const RSB_FLAG_SYMMETRIC                               = 0x400000
const RSB_FLAG_HERMITIAN                               = 0x800000
const RSB_FLAG_RECURSIVE_MORE_LEAVES_THAN_THREADS      = 0x1000000
const RSB_FLAG_LOWER_HERMITIAN          = (RSB_FLAG_HERMITIAN | RSB_FLAG_LOWER)
const RSB_FLAG_UPPER_HERMITIAN          = (RSB_FLAG_HERMITIAN | RSB_FLAG_UPPER)
const RSB_FLAG_LOWER_TRIANGULAR         = (RSB_FLAG_TRIANGULAR | RSB_FLAG_LOWER)
const RSB_FLAG_UPPER_TRIANGULAR         = (RSB_FLAG_TRIANGULAR | RSB_FLAG_UPPER)
const RSB_FLAG_LOWER_SYMMETRIC          = (RSB_FLAG_SYMMETRIC | RSB_FLAG_LOWER)
const RSB_FLAG_DIAGONAL                 = (RSB_FLAG_UPPER | RSB_FLAG_LOWER)
const RSB_FLAG_UPPER_SYMMETRIC          = (RSB_FLAG_SYMMETRIC | RSB_FLAG_UPPER)
const RSB_FLAG_RECURSIVE_SUBDIVIDE_MORE_ON_DIAG        = 0x8000000
const RSB_FLAG_EXTERNALLY_ALLOCATED_ARRAYS             = 0x40000000
const RSB_FLAG_USE_CSR_RESERVED                        = 0x200000
const RSB_FLAG_USE_HALFWORD_INDICES_CSR      = (RSB_FLAG_USE_HALFWORD_INDICES|RSB_FLAG_USE_CSR_RESERVED)
const RSB_FLAG_USE_HALFWORD_INDICES_COO      = (RSB_FLAG_USE_HALFWORD_INDICES|RSB_FLAG_WANT_COO_STORAGE)
const RSB_FLAG_MUTUALLY_EXCLUSIVE_SWITCHES   = (RSB_FLAG_USE_HALFWORD_INDICES_COO|RSB_FLAG_USE_HALFWORD_INDICES_CSR)
const RSB_FLAG_DEFAULT_STORAGE_FLAGS         = (RSB_FLAG_WANT_BCSS_STORAGE|RSB_FLAG_WANT_COO_STORAGE)
const RSB_FLAG_DEFAULT_COO_MATRIX_FLAGS      = RSB_FLAG_WANT_COO_STORAGE
const RSB_FLAG_DEFAULT_CSR_MATRIX_FLAGS      = RSB_FLAG_WANT_BCSS_STORAGE
const RSB_FLAG_DEFAULT_RSB_MATRIX_FLAGS      = (RSB_FLAG_QUAD_PARTITIONING|RSB_FLAG_USE_HALFWORD_INDICES|RSB_FLAG_WANT_COO_STORAGE|RSB_FLAG_WANT_BCSS_STORAGE)
const RSB_FLAG_DEFAULT_MATRIX_FLAGS          = RSB_FLAG_DEFAULT_RSB_MATRIX_FLAGS

# Transpose flags
const RSB_TRANSPOSITION_N = 0x4E
const RSB_TRANSPOSITION_T = 0x54
const RSB_TRANSPOSITION_C = 0x43

# Info flags
const RSB_MIF_INDEX_STORAGE_IN_BYTES__TO__SIZE_T             = 0x00000001
const RSB_MIF_INDEX_STORAGE_IN_BYTES_PER_NNZ__TO__RSB_REAL_T = 0x00000002
const RSB_MIF_MATRIX_ROWS__TO__RSB_COO_INDEX_T               = 0x00000004
const RSB_MIF_MATRIX_COLS__TO__RSB_COO_INDEX_T               = 0x00000008
const RSB_MIF_MATRIX_NNZ__TO__RSB_NNZ_INDEX_T                = 0x00000010
const RSB_MIF_TOTAL_SIZE__TO__SIZE_T                         = 0x00000020
const RSB_MIF_MATRIX_FLAGS__TO__RSB_FLAGS_T                  = 0x00000040
const RSB_MIF_MATRIX_TYPECODE__TO__RSB_TYPE_T                = 0x00000080
const RSB_MIF_MATRIX_INFO__TO__CHAR_P                        = 0x00000100
const RSB_MIF_LEAVES_COUNT__TO__RSB_BLK_INDEX_T              = 0x00000200

# Vector extraction flags
const RSB_EXTF_NORM_ONE  = 0x00001001
const RSB_EXTF_NORM_TWO  = 0x00001002
const RSB_EXTF_NORM_INF  = 0x00001003
const RSB_EXTF_SUMS_ROW  = 0x00001004
const RSB_EXTF_SUMS_COL  = 0x00001005
const RSB_EXTF_ASUMS_ROW = 0x00001006
const RSB_EXTF_ASUMS_COL = 0x00001007
const RSB_EXTF_DIAG      = 0x00000004


# Errors
const RSB_ERR_NO_ERROR = 0x000


const RSB_DEFAULT_ROW_BLOCKING = 1
const RSB_DEFAULT_COL_BLOCKING = 1
const RSB_DEFAULT_BLOCKING     = 1
